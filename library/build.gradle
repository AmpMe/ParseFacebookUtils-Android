import com.android.builder.core.BuilderConstants

apply plugin: 'com.android.library'

group = 'com.parse'
version = '1.10.5-SNAPSHOT'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName project.version
    }
}

dependencies {
    compile 'com.parse:parse-android:1.12.0'

    // We need to exclude bolts-android since facebook-android-sdk 3.x.x depends on a version of
    // bolts-android before being split into bolts-tasks and bolts-applinks.
    compile ('com.facebook.android:facebook-android-sdk:3.23.1') {
        exclude module: 'bolts-android'
    }
    // facebook-android-sdk 3.x.x depends on AppLinks inside bolts-android
    compile 'com.parse.bolts:bolts-applinks:1.3.0'
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name

    def jarTask = task("jar${name.capitalize()}", type: Jar) {
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir

        manifest {
            attributes(
                    "Bundle-Name": 'parsefacebookutils-v3-android',
                    "Bundle-Version": project.version
            )
        }

        exclude '**/R.class'
        exclude '**/R\$*.class'
        exclude '**/Manifest.class'
        exclude '**/Manifest\$*.class'
        exclude '**/BuildConfig.class'

        baseName 'ParseFacebookUtilsV3'
    }

    def javadocTask = task("javadoc${variant.name.capitalize()}", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)

        options.docletpath = [rootProject.file("./gradle/ExcludeDoclet.jar")]
        options.doclet = "me.grantland.doclet.ExcludeDoclet"

        options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
        options.links("http://boltsframework.github.io/docs/android/")

        exclude '**/BuildConfig.java'
        exclude '**/R.java'
        exclude '**/internal/**'
    }

    def javadocJarTask = task("javadocJar${variant.name.capitalize()}", type: Jar, dependsOn: "javadoc${variant.name.capitalize()}") {
        classifier = 'javadoc'
        from javadocTask.destinationDir
    }

    if (name.equals(BuilderConstants.RELEASE)) {
        artifacts.add('archives', jarTask);
        artifacts.add('archives', javadocJarTask);
    }
}

//region Maven

apply plugin: 'maven'
apply plugin: 'signing'

def isSnapshot = version.endsWith('-SNAPSHOT')
def ossrhUsername = hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : System.getenv('CI_NEXUS_USERNAME')
def ossrhPassword = hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : System.getenv('CI_NEXUS_PASSWORD')

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        pom.project {
            name 'ParseFacebookUtils-Android'
            artifactId = 'parsefacebookutils-v3-android'
            packaging 'jar'
            description 'A utility library to authenticate ParseUsers with the Facebook SDK'
            url 'https://github.com/ParsePlatform/ParseFacebookUtils-Android'

            scm {
                connection 'scm:git@github.com:ParsePlatform/ParseFacebookUtils-Android.git'
                developerConnection 'scm:git@github.com:ParsePlatform/ParseFacebookUtils-Android.git'
                url 'https://github.com/ParsePlatform/ParseFacebookUtils-Android'
            }

            licenses {
                license {
                    name 'BSD License'
                    url 'https://github.com/ParsePlatform/ParseFacebookUtils-Android/blob/master/LICENSE'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'parse'
                    name 'Parse'
                }
            }
        }
    }
}

signing {
    required { !isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}

//endregion
